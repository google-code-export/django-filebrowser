This page is a preliminary documentation on Version 3.0 of the !FileBrowser.<br><br>
----
<br>
=Basic Installation=

  # *Install the !FileBrowser*
    Install the !FileBrowser anywhere on your python-path. I´m personally using the project-directory.
{{{
svn checkout http://django-filebrowser.googlecode.com/svn/branches/filebrowser_3/filebrowser/ filebrowser
}}}
  # *Copy Media*
    Copy the folder /media to your media-directory and change URL_FILEBROWSER_MEDIA (in fb_settings.py) accordingly.
  # *Add filebrowser to your INSTALLED APPS.*
    Open your projects settings-file (settings.py) and add the filebrowser to your INSTALLED APPS. 
  # *Change fb_settings.py*
    Either change fb_settings.py or overwrite the filebrowser settings in your project settings-file (settings.py). See "Available Settings".
  # *Change your urls.py*
    Add the following line BEFORE the admin-urls:
{{{
(r'^admin/filebrowser/', include('filebrowser.urls')),
}}}
  # *Add the !FileBrowser to your Admin Indexpage*
    Edit /templates/admin/index.html. Add this code BEFORE {% for app in app_list %} ... {% endfor %}:
{{{
{% include "filebrowser/append.html" %}
}}}
  # That's it.
<br>
----
<br>
= Available Settings =

All Settings can be defined in your projects settings-file (settings.py) or the !FileBrowsers settings-file (fb_settings.py). When using the projects settings-file, you have to use the prefix "FILEBROWSER" for every setting (e.g. FILEBROWSER_MEDIA_URL instead of MEDIA_URL).
=== DEBUG ==
Set to True in order to get an additional column with the fileobjects data.
{{{
DEBUG = getattr(settings, "FILEBROWSER_DEBUG", False)
}}}
=== MAIN URL/PATH SETTINGS ===
The absolute path to the directory that holds your media-files.
{{{
MEDIA_ROOT = getattr(settings, "FILEBROWSER_MEDIA_ROOT", settings.MEDIA_ROOT)
}}}
URL that handles the media served from MEDIA_ROOT.
{{{
MEDIA_URL = getattr(settings, "FILEBROWSER_MEDIA_URL", settings.MEDIA_URL)
}}}
Main !FileBrowser Directory. This has to be a directory within MEDIA_ROOT. Leave empty in order to browse all files under MEDIA_ROOT.
{{{
DIRECTORY = getattr(settings, "FILEBROWSER_DIRECTORY", 'uploads/')
}}}
=== URL_ADMIN & URL_HOME ===
The !FileBrowser Admin-URL. If you change this URL, you also have to change the file urls.py.
{{{
URL_ADMIN = getattr(settings, "FILEBROWSER_URL_ADMIN", '/admin/filebrowser/')
}}}
The URL to your Admin Index-Site.
{{{
URL_HOME = getattr(settings, "FILEBROWSER_URL_HOME", '/admin/')
}}}
=== FILEBROWSER_MEDIA & TINYMCE_MEDIA ===
The URL and Path to your !FileBrowser media-files. You have to change this settings, if you install the media-files of the !FileBrowser outside your admin-media directory.
{{{
URL_FILEBROWSER_MEDIA = getattr(settings, "FILEBROWSER_URL_FILEBROWSER_MEDIA", settings.ADMIN_MEDIA_PREFIX + "filebrowser/")
PATH_FILEBROWSER_MEDIA = getattr(settings, "FILEBROWSER_PATH_MEDIA", settings.ADMIN_MEDIA_PREFIX + "filebrowser/")
}}}
The URL to your TinyMCE Installation. You have to change this settings, if you install TinyMCE outside your admin-media directory.
{{{
URL_TINYMCE = getattr(settings, "FILEBROWSER_URL_TINYMCE", settings.ADMIN_MEDIA_PREFIX + "tinymce/jscripts/tiny_mce/")
PATH_TINYMCE = getattr(settings, "FILEBROWSER_PATH_TINYMCE", settings.ADMIN_MEDIA_PREFIX + "tinymce/jscripts/tiny_mce/")
}}}
=== EXTENSIONS & SELECT_FORMATS ===
Allowed Extensions for File Upload. Please be aware that there are Icons for the default extension settings. If you rename "Sound" to "Music", you also have to rename the Sound-Icon within the img-directory.
{{{
EXTENSIONS = getattr(settings, "FILEBROWSER_EXTENSIONS", {
    'Folder':[''],
    'Image':['.jpg', '.jpeg', '.gif','.png','.tif','.tiff'],
    'Video':['.mov','.wmv','.mpeg','.mpg','.avi','.rm'],
    'Document':['.pdf','.doc','.rtf','.txt','.xls','.csv'],
    'Sound':['.mp3','.mp4','.wav','.aiff','.midi','.m4p'],
    'Code':['.html','.py','.js','.css']
})
}}}
Set different Options for selecting elements from the !FileBrowser.
{{{
SELECT_FORMATS = getattr(settings, "FILEBROWSER_SELECT_FORMATS", {
    'File': ['Folder','Document',],
    'Image': ['Image'],
    'Media': ['Video','Sound'],
    'Document': ['Document'],
    # for TinyMCE we also have to define lower-case items
    'image': ['Image'],
    'file': ['Folder','Image','Document',],
})
}}}
=== VERSIONS_BASEDIR & VERSIONS ==
{{{
VERSIONS_BASEDIR = getattr(settings, 'FILEBROWSER_VERSIONS_BASEDIR', '_versions_')
}}}
{{{
VERSIONS = getattr(settings, "FILEBROWSER_VERSIONS", {
    'fb_thumb': {'verbose_name': 'Admin Thumbnail', 'width': 60, 'height': 60, 'opts': 'crop upscale'},
    'thumbnail': {'verbose_name': 'Thumbnail (140px)', 'width': 140, 'height': '', 'opts': ''},
    'small': {'verbose_name': 'Small (300px)', 'width': 300, 'height': '', 'opts': ''},
    'medium': {'verbose_name': 'Medium (460px)', 'width': 460, 'height': '', 'opts': ''},
    'big': {'verbose_name': 'Big (620px)', 'width': 620, 'height': '', 'opts': ''},
    'cropped': {'verbose_name': 'Cropped (60x60px)', 'width': 60, 'height': 60, 'opts': 'crop'},
    'croppedthumbnail': {'verbose_name': 'Cropped Thumbnail (140x140px)', 'width': 140, 'height': 140, 'opts': 'crop'},
})
}}}
{{{
ADMIN_VERSIONS = ['thumbnail','small', 'medium','big']
ADMIN_THUMBNAIL = 'fb_thumb'
}}}
=== OPTIONAL SETTINGS ===
*SAVE_FULL_URL: *True to save the URL including MEDIA_URL to your model fields or False (default) to save path relative to MEDIA_URL.
{{{
SAVE_FULL_URL = getattr(settings, "FILEBROWSER_SAVE_FULL_URL", False)
}}}
*STRICT_PIL:* If set to True, then !FileBrowser will not try to import a mis-installed PIL.
{{{
STRICT_PIL = getattr(settings, 'FILEBROWSER_STRICT_PIL', False)
}}}
*DISALLOWED_FOLDER_NAMES:* A list with names not allowed for folders (becasue these names are used within filebrowser URLs).
{{{
DISALLOWED_FOLDER_NAMES = getattr(settings, "FILEBROWSER_DISALLOWED_FOLDER_NAMES", ['mkdir', 'makethumbs', 'upload', 'rename', 'delete'])
}}}
*IMAGE_MAXBLOCK:* see http://mail.python.org/pipermail/image-sig/1999-August/000816.html
{{{
IMAGE_MAXBLOCK = getattr(settings, 'FILEBROWSER_IMAGE_MAXBLOCK', 1024*1024)
}}}
*EXCLUDE:*
{{{
EXCLUDE = (r'_(jpg|png|gif)_.*_q\d{1,3}\.(jpg|png|gif)', )
}}}
*MAX_UPLOAD_SIZE:* Max. Upload Size in Bytes.
{{{
MAX_UPLOAD_SIZE = getattr(settings, "FILEBROWSER_MAX_UPLOAD_SIZE", 5000000)
}}}
<br>
----
<br>
=Using the !FileBrowseField=

The !FileBrowseField is a Model field (see http://docs.djangoproject.com/en/dev/ref/models/fields/#field-types for other field types) used to select a File/Document/Image/Folder from your Media Server.

  # *Define your models like this*
{{{
from filebrowser.fields import FileBrowseField

class Publication(models.Model):
    ...
    image = FileBrowseField("Image", max_length=200, blank=True, null=True)
    image_initialdir = FileBrowseField("Image (Initial Directory)", max_length=200, initial_directory="/filebrowser_test/", blank=True, null=True)
    image_extensions = FileBrowseField("Image (Extensions)", max_length=200, extensions_allowed=['.jpg'], help_text="Only jpg-Images allowed.", blank=True, null=True)
    image_format = FileBrowseField("Image (Format)", max_length=200, format='Image', blank=True, null=True)
    pdf = FileBrowseField("PDF", max_length=200, initial_directory="/filebrowser_test/", extensions_allowed=['.pdf'], format='Document', blank=True, null=True)
    ...
}}}

=== Attributes for the !FileBrowseField ===
  * *max_length*
    Since the !FileBrowseField is basically a !CharField, you have to define max_length.
  * *initial_directory*
    Server Directory shown when the User clicks on the !FileBrowser-Icon beneath the Input Field. This is a subdirectory of PATH_SERVER (see fb_settings.py). If you define PATH_SERVER as "/var/www/vhosts/mysite.com/media/uploads/" and initial_directory as "/blog/", you´ll see the server-directory "/var/www/vhosts/mysite.com/media/uploads/blog/". If you don´t define initial_directory (or define initial_directory as ""), you´ll browse PATH_SERVER. Note that you are NOT able to see a directory above PATH_SERVER.
  * *extensions_allowed*
    List of Extensions allowed for this Field. Users will get an error message ("Extension not allowed.") if the selected File has an extension not listed here. *If you want to allow every possible file-extension, set extensions_allowed="" or remove the attribute*. Extensions are automatically converted to lowercase - therefore, you don´t have to define '.JPG' and '.jpg', but only '.jpg'.
  * *format*
    Use this attribute to restrict selection to specific filetypes. E.g., if you use *format='Image'*, only Images can be selected from the !FileBrowser. Note: Image has to befined with SELECT_FORMATS.

=== Image Preview ===
The Thumbnail will automatically be generated. Clicking on the Thumbnail below the !FileBrowseField will open the Image in a new window/tab.

=== !FileBrowseField in Templates ===
With the above Publication-Model, you can use
{{{
{{ publication.image }}
}}}
to output the contents of your image-field. For example, this could result in something like "uploads/images/myimage.jpg".
<br>
----
<br>
= Templatetags =
New in Version 3.0: Instead of Generating Image-Versions on Upload, the Versions are now generated "on the fly" with using Templatetags.

You have two different tags to choose from: *version* and *version_object*.

=== version ===
Get the URL for a version of an existing Image according to the predefined VERSIONS settings (see fb_settings).
{{{
{% version field_name version_prefix %}
}}}    
Use {% version my_image 'medium' %} in order to display the medium-size version of an Image stored in a field name my_image. version_prefix can be a string or a variable. If version_prefix is a string, use quotes.
=== version_object ===
Returns a context variable 'version_object'.
{{{
{% version_object field_name version_prefix %}
}}}    
Use {% version_object my_image 'medium' %} in order to retrieve the medium version of an Image stored in a field name my_image. version_prefix can be a string or a variable. if version_prefix is a string, use quotes.