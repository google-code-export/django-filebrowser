=Using the !FileBrowseField=

The !FileBrowseField (which is a !CharField with a specific help_text) makes selecting images easier and more comfortable compared with the given Image- or FileField - especially if you don't want to limit the selection to a directory.

Define your models like this:
{{{
class Publication(models.Model):
...
    blog_image = models.CharField(help_text="FileBrowser: /images/blog/", blank=True, null=True)
    sidebar_image = models.CharField(help_text="FileBrowser.", blank=True, null=True)
    ...
    class Admin:
    ...
        js = (
            'js/getElementsBySelector.js',
            'filebrowser/js/AddFileBrowser.js',
        )
}}}
The script !AddFileBrowser.js looks for the help_text "!FileBrowser." and adds an Icon for opening the !FileBrowser in a new window. You may define an initial directory for each !FileBrowseField by adding a path to the help_text: Like "!FileBrowser: /images/blog/".

Additionally the script adds a preview-image when an image is selected with the !FileBrowser (see screenshots). The script !FileBrowserSelect.js is used by the FileBrowser to insert a selected preview-image.

Be aware that the preview-image is the thumbnail generated on file-upload. Therefore, if you upload a file using FTP and there´s no thumbnail, you won´t get a preview. You do get a no_thumb icon instead. If you DO get an image-thumbnail, you can click the thumbnail to see the original-image.



